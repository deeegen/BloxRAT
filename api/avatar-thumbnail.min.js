// @ts-nocheck
export default async function handler(e,t){const{userId:s,type:r="avatar",isCircular:a=!1,size:o=420,format:n="Png",responseType:i="image"}=e.query;if(!s)return t.status(400).json({error:"User ID not specified!"});const c=`https://thumbnails.roblox.com/v1/users/${r}?userIds=${s}&size=${o}x${o}&format=${n}&isCircular=${a}`;try{const e=await fetch(c),s=await e.json(),r=s?.data?.[0];if(!r||!r.imageUrl)return t.status(404).json({error:"Data not found"});if("image"==i){const e=await fetch(r.imageUrl),s=e.headers.get("content-type"),a=await e.arrayBuffer();t.setHeader("Content-Type",s),t.setHeader("Access-Control-Allow-Origin","*"),t.status(200).send(Buffer.from(a))}else"json"==i?(t.setHeader("Access-Control-Allow-Origin","*"),t.status(200).json({data:r})):t.status(400).json({error:"Invalid response type"})}catch(e){t.status(500).json({error:"Failed to fetch from Roblox"})}}