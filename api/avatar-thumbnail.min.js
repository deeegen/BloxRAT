// @ts-nocheck
export default async function handler(e,r){const{userId:s,type:t="avatar",isCircular:a=!1,size:o=420,format:n="Png",responseType:i="image"}=e.query;if(!s)return r.status(400).json({error:"User ID not specified!"});const u=`https://thumbnails.roblox.com/v1/users/${t}?userIds=${s}&size=${o}x${o}&format=${n}&isCircular=${a}`,l=`https://users.roblox.com/v1/users/${s}`;try{const[e,s]=await Promise.all([fetch(u),fetch(l)]),c=await e.json(),f=c?.data?.[0];if(!f||!f.imageUrl)return r.status(404).json({error:"Thumbnail data not found"});if("image"==i){const e=await fetch(f.imageUrl),s=e.headers.get("content-type"),t=await e.arrayBuffer();return r.setHeader("Content-Type",s),r.setHeader("Access-Control-Allow-Origin","*"),r.status(200).send(Buffer.from(t))}if("json"==i){if(!s.ok)return r.status(404).json({error:"User info not found"});const e=await s.json();return r.setHeader("Access-Control-Allow-Origin","*"),r.status(200).json({userId:e.id,username:e.name,displayName:e.displayName,avatarThumbnail:{customImageUrl:u,imageUrl:f.imageUrl,type:t,size:o,format:n,isCircular:a}})}r.status(400).json({error:"Invalid response type"})}catch(e){r.status(500).json({error:"Failed to fetch from Roblox",details:e.message})}}